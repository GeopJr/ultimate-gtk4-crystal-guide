import{_ as s,c as n,o as a,a as o}from"./app.4beb082a.js";const i=JSON.parse('{"title":"Flatpak","description":"","frontmatter":{},"headers":[],"relativePath":"en/packaging/flatpak.md","lastUpdated":1657016119000}'),l={name:"en/packaging/flatpak.md"},p=o(`<h1 id="flatpak" tabindex="-1">Flatpak <a class="header-anchor" href="#flatpak" aria-hidden="true">#</a></h1><p>Flatpak is a sandboxed package format making packaging a bit trickier.</p><p>You can write flatpak configs in either json or yaml, but for the sake of being compatible with GNOME Builder, we&#39;ll create a <code>data/APP_ID.json</code> file.</p><p>During the build process <code>shards</code> won&#39;t be able to download the required libraries. For that reason I&#39;ve written the following script that goes through your <code>shard.lock</code> and <code>lib/</code> folder, collects shard versions and postinstall scripts and returns them in the correct format and with instructions:</p><div class="language-crystal"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Generates the required sources for the flatpak based on the shard.lock</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">require</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yaml</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">require</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">require</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">option_parser</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">PATH</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Path</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">toJson </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">OptionParser</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">parse </span><span style="color:#89DDFF;font-style:italic;">do </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">parser</span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">  parser</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">on </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-j</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Whether it should export json instead of yaml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">    toJson </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">lockfile </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">YAML</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shard.lock</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">shards </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> lockfile</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shards</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sources </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Hash</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">postinstall_scripts </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">shards</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">as_h</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">each </span><span style="color:#89DDFF;font-style:italic;">do </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> y</span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">  version_type </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tag</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">v</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> y</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">to_s</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> version</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes?</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+git.commit.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    version_type </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">commit</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> version</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+git.commit.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)[-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">  sources </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> y</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">to_s</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    version_type </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> version</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PATH</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">to_s</span><span style="color:#89DDFF;">).</span><span style="color:#A6ACCD;">to_s</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Dir</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#A6ACCD;">each_child </span><span style="color:#89DDFF;font-style:italic;">do </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">child</span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">  child_path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Path</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lib/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">].</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">child</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">next</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">unless</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">directory?</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">child_path</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  shard_file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">YAML</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">File</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">child_path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shard.yml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)))</span></span>
<span class="line"><span style="color:#A6ACCD;">  postinstall </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> shard_file</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">?</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">try </span><span style="color:#89DDFF;">&amp;.[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">postinstall</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">?</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">next</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">unless</span><span style="color:#A6ACCD;"> postinstall</span></span>
<span class="line"><span style="color:#A6ACCD;">  postinstall_scripts </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cd </span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">child_path</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> &amp;&amp; </span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">postinstall</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> &amp;&amp; cd ../..</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">commands </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># The following loop will go through all libs and symlink their libs to the parent folder.</span></span>
<span class="line"><span style="color:#A6ACCD;">commands </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">for i in ./</span><span style="color:#89DDFF;">#{</span><span style="color:#FFCB6B;">PATH</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/*/; do ln -snf </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">..</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">$i/lib</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">; done</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">commands </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> postinstall_scripts </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> postinstall_scripts</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">puts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Place the following snippet inside the &#39;build-commands&#39; of your config:</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">puts</span><span style="color:#A6ACCD;"> toJson </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> commands</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">to_pretty_json </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> commands</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">to_yaml</span></span>
<span class="line"><span style="color:#82AAFF;">puts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Keep in mind that postinstall scripts might need to be modified and audited.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">puts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">puts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Place the following snippet inside the &#39;sources&#39; of your config:</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">puts</span><span style="color:#A6ACCD;"> toJson </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> sources</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">to_pretty_json </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> sources</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">to_yaml</span></span>
<span class="line"></span></code></pre></div><p>Save it as <code>shards_to_sources.cr</code> and run:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ crystal run shards_to_sources.cr</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>You can also pass the <code>-j</code> format if you want it in json (<code>crystal run shards_to_sources.cr -- -j</code>).</p><p>Follow the instructions and audit the postinstall scripts.</p><p>Now on the script writing, it depends on your package. You will have to install and build all dependencies as well as manage Crystal and shard versions. I don&#39;t want to focus too much on it so you are more than welcome to take a look at <a href="https://raw.githubusercontent.com/GeopJr/Hashbrown/main/data/dev.geopjr.Hashbrown.json" target="_blank" rel="noopener noreferrer">Collision&#39;s config</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Replace <code>APP_ID</code> with your app&#39;s ID</p></div>`,11),t=[p];function e(c,r,D,F,y,C){return a(),n("div",null,t)}var d=s(l,[["render",e]]);export{i as __pageData,d as default};
